//const uploadConfirm = document.getElementById('uploadConfirm').addEventListener('click', () => {
//    Papa.parse(document.getElementById('uploadfile').files[0],
//    {
//        download: true,
//        header: true,
//        skipEmptyLines: true,
//        complete: function(results){
//            console.log(results);
//        }
//    });
//});

const fs = require("fs")
const path = require('path')
const PORT = 8000
const axios = require('axios')
const express = require('express')
const app = express()
const cors = require('cors')
app.use(cors())
app.use(express.urlencoded({extended: false}))

app.listen(PORT, () => console.log('server running on PORT $(PORT)'))

function createObjects(array, alarms){
	//create objects from the csv file

	for(i=1; i< array.length - 1; i++){

		alarmVals = array[i].split(",")
		//console.log(alarmVals)

		alarm = {

			"tagNo" : alarmVals[0].slice(1,10),
			"desc"	: alarmVals[1],
			"tripLvl" : alarmVals[2],
			"state"	:	alarmVals[3],
			"date"	: alarmVals[4],
			"time"	: alarmVals[5]
		}
		//perfrom some checks on alarm data
		if(alarm.tagNo.length !==8)
			continue
		else
			alarms.push(alarm)
	}
	return alarms;
}

function sendData(count){
	//calculate and send data relating to the number of trips per tag (entire period)

	let dataPoints = []
	
	//split the data from the dic into two lists (x & y)
	const keys = Object.keys(count)
	const values = Object.values(count)
	console.log("Number of unique dataPoints", keys.length)

	//create an object 
	for(i=0; i< keys.length; i++){
		data = {
			"X" : keys[i],
			"Y"	: values[i]
		}
		dataPoints.push(data)
	}
	
	console.log(typeof(dataPoints[1].Y))
	console.log(typeof(dataPoints[1].X))

	dataPoints.sort((a, b) => b.Y - a.Y);
	console.log(dataPoints)

	//Sorted_dataPoints = sortVals(dataPoints)

	app.get('/', function(req,res){
	res.json(dataPoints)
	})
}


function getUnique(alarms){
	//get unique tag numbers from list
	let tempList = [];

	//sort alarms based on tag no
	sortedAlarms = alarms.sort((a,b)=>{
		fa = a.tagNo.toLowerCase(),
		fb = b.tagNo.toLowerCase();

		if (fa <fb){
			return -1;
		}
		if(fa>fb){
			return 1;
		}
		return 0;
	});
	
	for(i=0;i<alarms.length;i++){
		tempList.push(alarms[i].tagNo)
	}
	const uniqueList = [...new Set(tempList)]
	return uniqueList
}

function countAlarms(alarms, uniqueList){
	//function to count the occurences of each alarm in the csv
	let tempList = [];
	for(i=0;i<alarms.length;i++){
		tempList.push(alarms[i].tagNo)
	}
	
	var alarmCount = {};
	for(var element of tempList){
		if(alarmCount[element]){
			alarmCount[element] +=1;
		}else{
			alarmCount[element] =1;
		}
	}
	return alarmCount;
}

function getData(){
	//function to read in the data (NOT Async)
	fs.readdirSync('data').forEach(file =>{
		csv = fs.readFileSync(`data/${file}`)
		var tempArray = csv.toString().split("\r");
		array.push(...tempArray)
	})
}

var array = []
getData()
//console.log("All Data", array)
console.log("All Data Length", array.length)

//at this point we have converted the csv to an array
//convert the items in the array to objects
let alarms = []
alarms = createObjects(array, alarms)
console.log("NO of objects", alarms.length)


let uniqueTags = []
uniqueTags = getUnique(alarms)
//console.log(uniqueTags)

let count = 0;
count = countAlarms(alarms, uniqueTags)

sendData(count)



